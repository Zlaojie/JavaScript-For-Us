2019/7/8

笔记：

1.代码规范：位置》尺寸》文本》效果

2.先大概看一下HTML和css，再主要看红宝书

js高设第二章

基本类型和引用类型：JavaScript 中共有 6 种基本数据类型：Undefined、Null、Boolean、Number、String、Symbol (new in ES 6) ！基本数据类型的值是按值访问的。基本类型的值是不可变

基本类型的比较是它们的值的比较

数据类型不同，但是也可以进行值的比较，这是因为在比较之前，自动进行了数据类型的 隐式转换。

== : 只进行值的比较

=== : 不仅进行值得比较，还要进行数据类型的比较

基本类型的变量是存放在栈内存（Stack）里的

引用类型，除过上面的 6 种基本数据类型外，剩下的就是引用类型了，统称为 Object 类型。细分的话，有：Object 类型、Array 类型、Date 类型、RegExp 类型、Function 类型 等。还有3个特殊的引用类型：Boolean\Number\String

引用类型的值是按引用访问的。

引用类型的值是可变的

引用类型的值是保存在堆内存（Heap）中的对象（Object） 与其他编程语言不同，JavaScript 不能直接操作对象的内存空间（堆内存）。

js没有块级作用，故if语句和for语句中的变量声明会存在循环外部的执行环境中。
局部环境优先原则
2019/7/9

grid种菜小游戏

当grid-column-start单独使用时，默认情况下，电网项目将跨越一列。但是，您可以通过添加grid-column-end属性将项目扩展到多个列。grid-column-end不一定比grid-column-start大

grid-column-start小grid-column-end大的时候，grid-column-end要比实际数的列数后退1

当grid-column-end小，grid-column-start大的时候，grid-column-start要比实际数的列数后退1；

如果要算从右侧而不是左侧网格线，可以给grid-column-start和grid-column-end负值

您可以使用span关键字根据所需的列宽定义网格项，而不是根据网格线的起始位置和结束位置定义网格项。请记住，span只能使用正值。

您还可以使用span关键字with grid-column-start来设置项目相对于结束位置的宽度。

它grid-column是一个速记属性，可以同时接受两个值，用斜杠分隔。例如，grid-column: 2 / 4;将网格项设置为在第二个垂直网格线上开始，并在第四个网格线上结束。

grid-column: 2/span 3;还可以这样写

使用grid-column并grid-row同时在两个维度中设置位置。

如果输入两者grid-column并且grid-row对你来说太多了，那还有另一种简写。grid-area接受由斜线分开的四个值：grid-row-start，grid-column-start，grid-row-end，接着grid-column-end记住这个顺序

多件物品怎么样？您可以毫无困难地重叠它们。使用grid-area定义涵盖了所有的unwatered胡萝卜的第二区域。

如果电网项目不明确放置grid-area，grid-column，grid-row，等，它们会自动根据他们在源代码顺序放置。我们可以使用order属性覆盖它，这是基于表格的网格布局的优势之一。默认情况下，所有网格项都order为0，但可以将其设置为任何正值或负值，类似于z-index。

这是通过规则完成的grid-template-columns: 20% 20% 20% 20% 20%;，grid-template-rows: 20% 20% 20% 20% 20%;每个规则有五个值，这五个值创建五个列，每个列设置为花园总宽度的20％。

指定一堆宽度相同的列可能会变得乏味。幸运的是，有一个repeat功能可以帮助解决这个问题。例如，我们之前使用该规则定义了五个20％的列grid-template-columns: 20% 20% 20% 20% 20%;。这可以简化为grid-template-columns: repeat(5, 20%);

grid-template-columns不仅接受百分比值，还接受像素和ems等长度单位。您甚至可以将不同的单元组合在一起

Grid还引入了一个新的单元，即分数fr。每个fr单元分配一个可用空间份额。例如，如果两个元素分别设置为1fr和3fr，则将空间分成4个相等的份额; 第一个元素占任何剩余空间的1/4，第二个元素占3/4。grid-template-columns: 1fr 5fr;分成6份，第一份占1/6

grid-template是一个结合grid-template-rows和的简写属性grid-template-columns。例如，grid-template: 50% 50% / 200px;将创建一个网格，其中两行各占50％，另一列为200像素宽。

当列设置为像素，百分比或ems时，设置的任何其他列fr将分隔剩余的空间。

24和26题不熟

freecodecamp中文社区

例如，红，hex code 是 #FF0000 ，可被缩写成 #F00。也就是说，一位表示红，一位表示绿，一位表示蓝。

Bootstrap将会根据你的屏幕的大小来调整HTML元素的大小 —— 强调 响应式设计的概念。通过响应式设计，你无需再为你的网站设计一个手机版的。它在任何尺寸的屏幕上看起来都会不错。你仅需要通过添加下列代码到你的HTML开头来将Bootstrap添加到任意应用中：

<link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.1/css/bootstrap.min.css"/>
通常情况下，你的 button 元素仅与它所包含的文本一样宽。通过使其成为块级元素，你的按钮将会伸展并填满页面整个水平空间，任何在它之下的元素都会跟着浮动至该区块的下一行。

移动设备优先策略

内容 决定什么是最重要的。 布局 优先设计更小的宽度。 基础的 CSS 是移动设备优先，媒体查询是针对于平板电脑、台式电脑。 渐进增强 随着屏幕大小的增加而添加元素。 1.col-md-
container类可以确保居中
您可以很轻易地改变带有 .col-md-push-* 和 .col-md-pull-* 类的内置网格列的顺序，其中 * 范围是从 1 到 11。
flex布局

justify-content，此CSS属性水平对齐项目并接受以下值：
flex-start：项目对齐容器的左侧。
flex-end：项目对齐容器的右侧。
center：项目在容器的中心对齐。
space-between：项目显示它们之间的间距相等。
space-around：项目周围显示相等的间距。
2.现在align-items，此CSS属性垂直对齐项并接受以下值：

flex-start：项目对齐容器的顶部。
flex-end：项目对齐容器的底部。
center：项目在容器的垂直中心对齐。
baseline：项目显示在容器的基线处。
stretch：项目被拉伸以适合容器。
3.flex-direction。此CSS属性定义项目放置在容器中的方向，并接受以下值：

row：项目与文本方向相同。
row-reverse：项目与文本方向相对。
column：项目从上到下排列。
column-reverse：项目从下到上放置。
请注意，当弹性方向为列时，justify-content将更改为垂直方向和align-items水平方向。
有时反转容器的行或列顺序是不够的。在这些情况下，我们可以将该order属性应用于单个项目。默认情况下，项的值为0，但我们可以使用此属性将其设置为正整数值或负整数值（-2，-1,0,1,2）。
order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。
使用flex-wrap属性将它们展开，该属性接受以下值：
nowrap：每个项目适合单行。
wrap：项目环绕其他行。
wrap-reverse：项目反向包围其他行。
7.使用它align-content来设置多条线彼此间隔的方式。此属性采用以下值：

flex-start：行被打包在容器的顶部。
flex-end：行被打包在容器的底部。
center：行被打包在容器的垂直中心。
space-between：行间显示相等的间距。
space-around：线条周围显示相等的间距。
stretch：拉伸线以适合容器。
这可能会造成混淆，但会align-content确定线条之间的间距，同时align-items确定整个项目在容器内的对齐方式。当只有一行时，align-content没有效果。
这两个性质flex-direction和flex-wrap如此经常在一起的速记属性用来flex-flow创建把它们结合起来。此简写属性接受由空格分隔的两个属性之一的值。例如，您可以使用flex-flow: row wrap设置行并包装它们。
js高设

JavaScript valueOf() 函数详解 2017年10月09日 16:23:01 工革 阅读数 1191 valueOf()函数用于返回指定对象的原始值。 该方法属于Object对象，由于所有的对象都"继承"了Object的对象实例，因此几乎所有的实例对象都可以使用该方法。 所有主流浏览器均支持该函数。 语法：object.valueOf( ) 返回值 valueOf()函数返回指定对象的原始值。 JavaScript的许多内置对象都重写了该函数，以实现更适合自身的功能需要。因此，不同类型对象的valueOf()方法的返回值和返回值类型均可能不同。
对象	返回值 Array	数组实例对象。 Boolean	布尔值。 Date	以毫秒数存储的时间值，从 UTC 1970 年 1 月 1 日午夜开始计算。 Function	函数本身。 Number	数字值。 Object	对象本身。这是默认设置。 String	字符串值。

手工解除引用：将其值设置为null，应该及时解除不再使用的全局对象，全局对象属性以及循环引用变量的引用。
创建对象的两个方法：var a=new Object();var a={name:'aa',age:12};
若数组一开始有3个值，将其length属性设置为2时，会移除最后一项，设置为4，访问最后一项时会undefind
alert:如果需要显示带换行的文本，可以使用\n：除了显示静态字符串外，alert()函数也可以接受变量，并将变量值与其它字符串进行拼接：并不接受向字符串传参数的做法, HTML标签将会被原封不动的进行显示,只能接受字符串参数
栈方法（后进先出）：push()接受任意数量的参数再逐个添加到数组末尾，返回修改后数组的长度，pop()从数组末尾移除最后一项，减少数组的length，返回移除的项
队列方法（先进先出）：shift（）能移除数组的第一个项并返回该项，同时将数组长度减1，unshift（）能在数组前端添加任意个项并返回新数组的长度
重排序方法：reverse（）方法反转数组，sort（）方法会调用每个数组项的toString()方法，比较的是字符串，可以在sort()中传入参数比较函数，
操作方法：concat()基于当前数组中所有项创建一个新数组，先创建当前数组的一个副本，再将接收到的参数添加到这个副本末尾，最后返回新构建的数组，原来的数组不变，slice（）方法基于当前数组中的一或多个项创建一个新数组，若两个参数，一个开头，一个结尾（可不必须），不包括结尾，参数是负数，用数组长度加上该数来确定位置，结尾小于起始，返回空数组，splice（）向数组的中部插入项，删除：第一项的位置和要删除的项数；插入：起始，要删除的项数0，要插入的项数（可以多个）；替换：起始，要删除的项数，要插入的任意数目的项。该方法会返回一个数组，包括删除的项
位置方法:indexOf()查找某个字符串在字符串首次出现的位置，lastIndexOf：从右向左查找某个字符串在字符串中最后一次出现的位置，注意：lastIndexOf(）方法虽然是从后往前搜索，但返回的位置是从前开始数的。两个参数：要查找的项和表示起点位置的索引
迭代方法：5个（每个方法都接收两个参数：要在每一项上运行的函数和可选的运行该函数的作用域对象），every（）和some（）返回true，filter（）返回true的项组成的数组，map()返回每次函数调用的结果组成的数组，forEach()没有返回值
归并方法：reduce()从第一项开始和reduceRight()从最后一项开始，都会迭代数组的所有项，然后构建一个最终返回的值，接受参数：要在每一项上运行的函数和可选的作为归并基础的初始值
7/10

基本包装类型Boolean\Number\String都有自己的方法可以用，但是不能添加属性和方法
正则表达式要加双引号吗
7/11

安装Yahoo!和Toolbar带有内置屏蔽程序的实用工具
eval()函数处理字符串
alert()方法接受一个字符串并将其显示给用户
每个函数都包含两个非继承而来的方法：call()方法和apply()方法。
不同点：接收参数的方式不同。 apply()方法 接收两个参数，一个是函数运行的作用域（this），另一个是参数数组。 语法：apply([thisObj [,argArray] ]);，调用一个对象的一个方法，2另一个对象替换当前对象。说明：如果argArray不是一个有效数组或不是arguments对象，那么将导致一个TypeError，如果没有提供argArray和thisObj任何一个参数，那么Global对象将用作thisObj。call()方法：第一个参数和apply()方法的一样，但是传递给函数的参数必须列举出来。 语法：call([thisObject[,arg1 [,arg2 [,...,argn]]]]);，应用某一对象的一个方法，用另一个对象替换当前对象。说明： call方法可以用来代替另一个对象调用一个方法，call方法可以将一个函数的对象上下文从初始的上下文改变为thisObj指定的新对象，如果没有提供thisObj参数，那么Global对象被用于thisObj。
